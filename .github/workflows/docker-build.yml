name: Docker Build & Release

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches:
      - stable
      - develop

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # Automático desde tag Git: v1.0.0-dev.X → 1.0.0-dev.X, 1.0.0-dev, 1.0
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            # Tag "develop" para tags de prerelease (contienen -dev, -alpha, -beta)
            type=raw,value=develop,enable={{is_default_branch}}
            # Tag "latest" y "stable" solo para tags de producción (sin prerelease)
            type=raw,value=latest,enable=${{ !contains(github.ref_name, '-') }}
            type=raw,value=stable,enable=${{ !contains(github.ref_name, '-') }}

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            VERSION=${{ github.ref_name }}
            COMMIT_SHA=${{ github.sha }}

  push:
    name: Push Docker Image
    runs-on: ubuntu-latest
    needs: build
    # Solo pushear cuando viene de un tag (no de PR)
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # Automático desde tag Git: v1.0.0-dev.X → 1.0.0-dev.X, 1.0.0-dev, 1.0
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            # Tag "develop" para tags de prerelease (contienen -dev, -alpha, -beta)
            type=raw,value=develop,enable={{is_default_branch}}
            # Tag "latest" y "stable" solo para tags de producción (sin prerelease)
            type=raw,value=latest,enable=${{ !contains(github.ref_name, '-') }}
            type=raw,value=stable,enable=${{ !contains(github.ref_name, '-') }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            VERSION=${{ github.ref_name }}
            COMMIT_SHA=${{ github.sha }}
